import Head from "next/head";
import { useEffect, useRef, useState } from "react";
import Cursor from "../components/Cursor.tsx";
import ImageContainer from "../components/ImageContainer.tsx";
import styles from "../styles/Home.module.css";

const arr = [0, 1, 2, 3, 4, 5];

export default function Home() {
  const [list, setList] = useState({});
  const [order, setOrder] = useState({
    element0: 0,
    element1: 1,
    element2: 2,
    element3: 3,
    element4: 4,
    element5: 5,
    // changed: null
  });
  const [render, setRender] = useState(0)

  const refs = useRef([]);

  // maps through every element and sets the needed properties for later use
  useEffect(() => {
    let elementList = {};

    refs.current.map((item, index) => {
      elementList[`element${index}`] = {
        top: item.getBoundingClientRect().top,
        left: item.getBoundingClientRect().left,
        right: item.getBoundingClientRect().right,
        bottom: item.getBoundingClientRect().bottom,
        x: item.offsetLeft + 200,
        y: item.offsetTop + 150,
      };
    });

    setList(elementList);
  }, []);

  // modify order of elements accoarding to the changed property
  // useEffect(() => {
  //   let newOrder = order;
  //   if (order.changed) {
  //     console.log("asdf");
  //     Object.entries(order).map((element) => {
  //       if (element[1] === order.changed) {
  //         newOrder[element[0]] = 500;
  //       }
  //     });

  //     setOrder(newOrder);
  //   }
  // }, [order]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <h1 onClick={() => {
        console.log(order)
        setRender(render + 1)
      }}>asdfasdf</h1>

      <div className={styles["big-wrapper"]}>
        <div className={styles["container-wrapper"]}>
          {arr.map((item, index) => {
            return (
              <div
                className={styles.wrapper}
                key={index}
                ref={(element) => {
                  refs.current[index] = element;
                }}
              >
                {item}
              </div>
            );
          })}
        </div>

        <div className={styles["image-wrapper"]}>
          {arr.map((item, index) => {
            return (
              <ImageContainer
                key={index}
                list={list}
                setList={setList}
                globalOrder={order}
                setGlobalOrder={setOrder}
                color="blue"
                index={index}
              />
            );
          })}
        </div>
      </div>
    </div>
  );
}
